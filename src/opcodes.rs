// Opcods for various 6502 assembly instructions.
pub mod opcodes {
    pub const INS_LDA_IM: u8 = 0xA9; // Opcode for LDA with immediate addressing mode.
    pub const INS_LDA_ZP: u8 = 0xA5; // Opcode for LDA with zero-page addressing mode.
    pub const INS_LDA_ZPX: u8 = 0xB5; // Opcode for LDA with zero-page,X addressing mode.
    pub const INS_LDA_ABS: u8 = 0xAD; // Opcode for LDA with Absolute addressing mode.
    pub const INS_LDA_ABS_X: u8 = 0xBD; // Opcode for LDA with Absolute,X addressing mode.
    pub const INS_LDA_ABS_Y: u8 = 0xB9; // Opcode for LDA with Absolute,Y addressing mode.
    pub const INS_LDA_IND_X: u8 = 0xA1; // Opcode for LDA with Indirect,X addressing mode.
    pub const INS_LDA_IND_Y: u8 = 0xB1; // Opcode for LDA with Indirect,Y addressing mode.
    pub const INS_LDX_IM: u8 = 0xA2; // Opcode for LDX with immediate addressing mode.
    pub const INS_LDX_ZP: u8 = 0xA6; // Opcode for LDX with zero-page addressing mode.
    pub const INS_LDX_ZPY: u8 = 0xB6; // Opcode for LDX with zero-page,Y addressing mode.
    pub const INS_LDX_ABS: u8 = 0xAE; // Opcode for LDX with Absolute addressing mode.
    pub const INS_LDX_ABS_Y: u8 = 0xBE; // Opcode for LDX with Absolute,Y addressing mode.
    pub const INS_LDY_IM: u8 = 0xA0; // Opcode for LDY with immediate addressing mode.
    pub const INS_LDY_ZP: u8 = 0xA4; // Opcode for LDY with zero-page addressing mode.
    pub const INS_LDY_ZPX: u8 = 0xB4; // Opcode for LDY with zero-page,X addressing mode.
    pub const INS_LDY_ABS: u8 = 0xAC; // Opcode for LDY with Absolute addressing mode.
    pub const INS_LDY_ABS_X: u8 = 0xBC; // Opcode for LDY with Absolute,X addressing mode.
    pub const INS_JSR: u8 = 0x20; // Opcode for Jump to Subroutine
    pub const INS_RTS: u8 = 0x60; // Opcode for Return from Soubroutine
    pub const INS_LSR_A: u8 = 0x4A; // Opcode for Logical Shift Right Accumulator.
    pub const INS_LSR_ZP: u8 = 0x46; // Opcode for Logical Shift Right zero-page.
    pub const INS_LSR_ZPX: u8 = 0x56; // Opcode for Logical Shift Right zero-page,X.
    pub const INS_LSR_ABS: u8 = 0x4E; // Opcode for Logical Shift Right Absolute addressing mode.
    pub const INS_LSR_ABS_X: u8 = 0x5E; // Opcode for Logical Shift Right Absolute,X addressing mode.
    pub const INS_NOP: u8 = 0xEA; // Opcode for No Operation.
    pub const INS_ORA_IM: u8 = 0x09; // Opcode for Logical Inclusive OR Immediate addressing mode.
    pub const INS_ORA_ZP: u8 = 0x05; // Opcode for Logical Inclusive OR Zero Page addressing mode.
    pub const INS_ORA_ZPX: u8 = 0x15; // Opcode for Logical Inclusive OR Zero Page,X addressing mode.
    pub const INS_ORA_ABS: u8 = 0x0D; // Opcode for Logical Inclusive OR Absolute addressing mode.
    pub const INS_ORA_ABS_X: u8 = 0x1D; // Opcode for Logical Inclusive OR Absolute,X addressing mode.
    pub const INS_ORA_ABS_Y: u8 = 0x19; // Opcode for Logical Inclusive OR Absolute, Y addressing mode.
    pub const INS_ORA_IND_X: u8 = 0x01; // Opcode for Logical Inclusive OR Indirect,X addressing mode.
    pub const INS_ORA_IND_Y: u8 = 0x11; // Opcode for Logical Inclusive OR Indirect,Y addressing mode.
    pub const INS_PHA: u8 = 0x48; // Opcode for PHA - Push accumulator.
    pub const INS_PHP: u8 = 0x08; // Opcode for PHP
    pub const INS_PLA: u8 = 0x68; // Opcode for PLA
    pub const INS_PLP: u8 = 0x28; // Opcode for PLP
    pub const INS_ROL_A: u8 = 0x2A; // Opcode for ROL - Rotate Left Accumulator addressing mode.
    pub const INS_ROL_ZP: u8 = 0x26; // Opcode for ROL - Rotate Left Zero Page addressing mode.
    pub const INS_ROL_ZPX: u8 = 0x36; // Opcode for ROL - Rotate Left Zero Page,X addressing mode.
    pub const INS_ROL_ABS: u8 = 0x2E; // Opcode for ROL - Rotate Left Absolute addressing mode.
    pub const INS_ROL_ABX: u8 = 0x3E; // Opcode for ROL - Rotate Left Absolute,X addressing mode.
    pub const INS_ROR_A: u8 = 0x6A; // Opcode for ROR - Rotate Right Accumulator addressing mode.
    pub const INS_ROR_ZP: u8 = 0x66; // Opcode for ROR - Rotate Right Zero Page addressing mode.
    pub const INS_ROR_ZPX: u8 = 0x76; // Opcode for ROR - Rotate Right Zero Page,X addressing mode.
    pub const INS_ROR_ABS: u8 = 0x6E; // Opcode for ROR - Rotate Right Absolute addressing mode.
    pub const INS_ROR_ABX: u8 = 0x7E; // Opcode for ROR - Rotate Right Absolute, X addressing mode.
    pub const INS_RTI: u8 = 0x40; // Opcode for RTI - Return from Interrupt.
    pub const INS_SBC_IM: u8 = 0xE9;
    pub const INS_SBC_ZP: u8 = 0xE5;
    pub const INS_SBC_ZPX: u8 = 0xF5;
    pub const INS_SBC_ABS: u8 = 0xED;
    pub const INS_SBC_ABX: u8 = 0xFD;
    pub const INS_SBC_ABY: u8 = 0xF9;
    pub const INS_SBC_IND_X: u8 = 0xE1;
    pub const INS_SBC_IND_Y: u8 = 0xF1;
}
